version: "3.9"

x-def-logging: &default-logging
  logging:
    driver: "loki"
    options:
      loki-url: "http://localhost:3100/loki/api/v1/push"
      loki-batch-size: "100"
      loki-retries: "2"
      loki-max-backoff: "1s"
      loki-timeout: "1s"

services:
  nginx:
    image: nginx:latest
    hostname: nginx-entrypoint
    container_name: nginx-entrypoint
    restart: unless-stopped
    <<: *default-logging
    environment:
      TZ: "Asia/Novosibirsk"
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/logs:/var/log/nginx
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 10s
      timeout: 10s
      retries: 20
    depends_on:
      - web
  
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    hostname: aspnetcore-web
    container_name: aspnetcore-web
    restart: unless-stopped
    ports:
      - "5000:80"
    environment:
     - ASPNETCORE_ENVIRONMENT=Development

  
  loki:
    hostname: loki
    image: grafana/loki:latest
    environment:
      TZ: ${SYSTEM_TIMEZONE:-Asia/Novosibirsk}
    volumes:
      - ./loki/retention-config.yaml:/etc/loki/retention-config.yaml
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
  
  grafana:
    hostname: grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - TZ=${SYSTEM_TIMEZONE:-Asia/Novosibirsk}
    volumes:
      - ./grafana/grafana-data:/etc/grafana/provisioning/datasources
    image: grafana/grafana:latest
    ports:
      - "3000:3000"